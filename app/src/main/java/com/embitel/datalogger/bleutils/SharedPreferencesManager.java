package com.embitel.datalogger.bleutils;import android.content.Context;import android.content.SharedPreferences;import com.embitel.datalogger.App;import com.embitel.datalogger.blemodule.data.BleDevice;import com.google.gson.GsonBuilder;import com.google.gson.internal.GsonBuildConfig;import java.util.HashSet;/** * The type Shared preferences manager. */public class SharedPreferencesManager {    private static SharedPreferencesManager manager;    private SharedPreferences sharedPref;    private SharedPreferencesManager() {    }    private static SharedPreferences getSharedPreferencesInstance() {        if (manager == null) {            manager = new SharedPreferencesManager();            Context ctx = App.getInstance();            manager.sharedPref = ctx.getSharedPreferences("DataLogger", Context.MODE_PRIVATE);        }        return manager.sharedPref;    }    /**     * Delete all.     */    public static void deleteAll() {        getSharedPreferencesInstance().edit().clear().commit();    }    /**     * Sets preference.     *     * @param key   the key     * @param value the value     *//*    Save string data in Sharedpreferences     */    public static void setPreference(String key, String value) {        SharedPreferences.Editor editor = getSharedPreferencesInstance().edit();        editor.putString(key, value);        editor.apply();    }    public static void setPreference(String key, HashSet<String> value){        SharedPreferences.Editor editor = getSharedPreferencesInstance().edit();        editor.putStringSet(key, value);        editor.apply();    }    /**     * Sets preference.     *  @param key   the key     * @param value the value     */    /**     * Sets preference.     *     * @param key   the key     * @param value the value     */    public static void setPreference(String key, long value) {        SharedPreferences.Editor editor = getSharedPreferencesInstance().edit();        editor.putLong(key, value);        editor.commit();    }    /**     * Sets preference.     *     * @param key   the key     * @param value the value     */    public static void setPreference(String key, boolean value) {        SharedPreferences.Editor editor = getSharedPreferencesInstance().edit();        editor.putBoolean(key, value);        editor.apply();    }    public static void setPreference(String key, int value) {        SharedPreferences.Editor editor = getSharedPreferencesInstance().edit();        editor.putInt(key, value);        editor.apply();    }    public static void setPreference(String key, BleDevice value) {        SharedPreferences.Editor editor = getSharedPreferencesInstance().edit();        String jsonString= new GsonBuilder().create().toJson(value);        editor.putString(key, jsonString);        editor.apply();    }    /**     * Remove preference.     *     * @param key the key     */    public static void removePreference(String key) {        SharedPreferences.Editor editor = getSharedPreferencesInstance().edit();        editor.remove(key);        editor.apply();    }    /**     * Gets string preference.     *     * @param key      the key     * @param defValue the def value     * @return the string preference     *//*    Fetching saved string data from Sharedprefrences     */    public static String getStringPreference(String key, String defValue) {        return getSharedPreferencesInstance().getString(key, defValue);    }    /**     * Gets store id.     *     * @return the store id     */    public static String getCategoryid() {        return getSharedPreferencesInstance().getString(SharedPreferenceConstant.GET_ADDRESS, "");    }    public static String getBLeDevice()    {        return getSharedPreferencesInstance().getString(SharedPreferenceConstant.BLE_DEVICE, "");    }    public static int getBleRetryValue()    {        return getSharedPreferencesInstance().getInt(SharedPreferenceConstant.RETRY_BLE_CONNECTION, 1);    }    public static int getAPICALLRetryValue()    {        return getSharedPreferencesInstance().getInt(SharedPreferenceConstant.RETRY_API_CALL, 1);    }    public static boolean getGPSValue()    {        return  getSharedPreferencesInstance().getBoolean(SharedPreferenceConstant.SET_GPS_VALUE,false);    }    public static boolean getDNDValue()    {        return  getSharedPreferencesInstance().getBoolean(SharedPreferenceConstant.SET_DND_VALUE,false);    }    public static String getMacAddress() {        return getSharedPreferencesInstance().getString(SharedPreferenceConstant.MAC_ADDRESS, "");    }    public static String getSpeed() {        return getSharedPreferencesInstance().getString(SharedPreferenceConstant.SPEED_VALUE, "30");    }    public static String getWeather() {        return getSharedPreferencesInstance().getString(SharedPreferenceConstant.WEATHER, "");    }    public static String getTemperature() {        return getSharedPreferencesInstance().getString(SharedPreferenceConstant.TEMP, "");    }}